{"remainingRequest":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue","mtime":1655745072194},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/babel-loader/lib/index.js","mtime":1655745211266},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/cache-loader/dist/cjs.js","mtime":1655745210831},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/vue-loader-v16/dist/index.js","mtime":1655745206159}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFNhbml0eUJsb2NrcyB9IGZyb20gInNhbml0eS1ibG9ja3MtdnVlLWNvbXBvbmVudCI7CmltcG9ydCBzYW5pdHkgZnJvbSAiLi4vY2xpZW50IjsKaW1wb3J0IGltYWdlVXJsQnVpbGRlciBmcm9tICJAc2FuaXR5L2ltYWdlLXVybCI7Cgpjb25zdCBpbWFnZUJ1aWxkZXIgPSBpbWFnZVVybEJ1aWxkZXIoc2FuaXR5KTsKCmNvbnN0IHF1ZXJ5ID0gYCpbc2x1Zy5jdXJyZW50ID09ICRzbHVnXSB7CiAgX2lkLAogIHRpdGxlLAogIHNsdWcsCiAgYm9keSwgCiAiaW1hZ2UiOiBtYWluSW1hZ2V7CiAgYXNzZXQtPnsKICBfaWQsCiAgdXJsCn0KfSwKIm5hbWUiOmF1dGhvci0+bmFtZSwKImF1dGhvckltYWdlIjphdXRob3ItPmltYWdlCn1bMF0KYDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2luZ2xlUG9zdCIsCiAgY29tcG9uZW50czogeyBTYW5pdHlCbG9ja3MgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgcG9zdDogW10sCiAgICAgIGJsb2NrczogW10sCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbWFnZVVybEZvcihzb3VyY2UpIHsKICAgICAgcmV0dXJuIGltYWdlQnVpbGRlci5pbWFnZShzb3VyY2UpOwogICAgfSwKICAgIGZldGNoRGF0YSgpIHsKICAgICAgdGhpcy5lcnJvciA9IHRoaXMucG9zdCA9IG51bGw7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CgogICAgICBzYW5pdHkuZmV0Y2gocXVlcnksIHsgc2x1ZzogdGhpcy4kcm91dGUucGFyYW1zLnNsdWcgfSkudGhlbigKICAgICAgICAocG9zdCkgPT4gewogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB0aGlzLnBvc3QgPSBwb3N0OwogICAgICAgICAgdGhpcy5ibG9ja3MgPSBwb3N0LmJvZHk7CiAgICAgICAgfSwKICAgICAgICAoZXJyb3IpID0+IHsKICAgICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjsKICAgICAgICB9CiAgICAgICk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue"],"names":[],"mappings":"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","file":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue","sourceRoot":"","sourcesContent":["\n<template>\n  <div>\n    <div class=\"loading\" v-if=\"loading\">Loading...</div>\n\n    <div v-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n\n    <div v-if=\"post\" class=\"content\">\n      <h1>{{ post.title }}</h1>\n      <img v-if=\"post.image\" :src=\"imageUrlFor(post.image).width(480)\" />\n\n      <h6>By: {{ post.name }}</h6>\n      <SanityBlocks :blocks=\"blocks\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { SanityBlocks } from \"sanity-blocks-vue-component\";\nimport sanity from \"../client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst imageBuilder = imageUrlBuilder(sanity);\n\nconst query = `*[slug.current == $slug] {\n  _id,\n  title,\n  slug,\n  body, \n \"image\": mainImage{\n  asset->{\n  _id,\n  url\n}\n},\n\"name\":author->name,\n\"authorImage\":author->image\n}[0]\n`;\n\nexport default {\n  name: \"SinglePost\",\n  components: { SanityBlocks },\n  data() {\n    return {\n      loading: true,\n      post: [],\n      blocks: [],\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    imageUrlFor(source) {\n      return imageBuilder.image(source);\n    },\n    fetchData() {\n      this.error = this.post = null;\n      this.loading = true;\n\n      sanity.fetch(query, { slug: this.$route.params.slug }).then(\n        (post) => {\n          this.loading = false;\n          this.post = post;\n          this.blocks = post.body;\n        },\n        (error) => {\n          this.error = error;\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 42em;\n}\nh1 {\n  text-align: center;\n}\nh6 {\n  color: #aaa;\n  padding: 1em;\n}\n</style>\n"]}]}