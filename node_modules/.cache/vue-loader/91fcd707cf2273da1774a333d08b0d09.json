{"remainingRequest":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue?vue&type=style&index=0&id=164ef990&scoped=true&lang=css","dependencies":[{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue","mtime":1655745072194},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/css-loader/dist/cjs.js","mtime":1655745210436},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1655745206390},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/postcss-loader/src/index.js","mtime":1655745207853},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/cache-loader/dist/cjs.js","mtime":1655745210831},{"path":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/node_modules/vue-loader-v16/dist/index.js","mtime":1655745206159}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250ZW50IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgbWFyZ2luOiAwIGF1dG87CiAgbWF4LXdpZHRoOiA0MmVtOwp9CmgxIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KaDYgewogIGNvbG9yOiAjYWFhOwogIHBhZGRpbmc6IDFlbTsKfQo="},{"version":3,"sources":["/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue"],"names":[],"mappings":";AA+EA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACd","file":"/Users/even/Documents/Nettsider/GIT/Sanity GIT/src/components/SinglePost.vue","sourceRoot":"","sourcesContent":["\n<template>\n  <div>\n    <div class=\"loading\" v-if=\"loading\">Loading...</div>\n\n    <div v-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n\n    <div v-if=\"post\" class=\"content\">\n      <h1>{{ post.title }}</h1>\n      <img v-if=\"post.image\" :src=\"imageUrlFor(post.image).width(480)\" />\n\n      <h6>By: {{ post.name }}</h6>\n      <SanityBlocks :blocks=\"blocks\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { SanityBlocks } from \"sanity-blocks-vue-component\";\nimport sanity from \"../client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst imageBuilder = imageUrlBuilder(sanity);\n\nconst query = `*[slug.current == $slug] {\n  _id,\n  title,\n  slug,\n  body, \n \"image\": mainImage{\n  asset->{\n  _id,\n  url\n}\n},\n\"name\":author->name,\n\"authorImage\":author->image\n}[0]\n`;\n\nexport default {\n  name: \"SinglePost\",\n  components: { SanityBlocks },\n  data() {\n    return {\n      loading: true,\n      post: [],\n      blocks: [],\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    imageUrlFor(source) {\n      return imageBuilder.image(source);\n    },\n    fetchData() {\n      this.error = this.post = null;\n      this.loading = true;\n\n      sanity.fetch(query, { slug: this.$route.params.slug }).then(\n        (post) => {\n          this.loading = false;\n          this.post = post;\n          this.blocks = post.body;\n        },\n        (error) => {\n          this.error = error;\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 42em;\n}\nh1 {\n  text-align: center;\n}\nh6 {\n  color: #aaa;\n  padding: 1em;\n}\n</style>\n"]}]}